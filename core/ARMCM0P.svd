<?xml version="1.0" encoding="utf-8"?>

<!-- SVD File for Core peripheral registers

Based on ARM's ARMCM0P.svd template file included in CMSIS_5 Github repository.
Peripheral register definitions were added based on the following references:

  - Cortex-M0+ Revision r0p1 Technical Reference Manual, ARM DDI 0484C
  - ARMv6-M Architecture Reference Manual, ARM DDI 0419E
  - core_cm0plus.h header source file by ARM, distributed as part of the
    CMSIS_5 Github repository.

The copyright notice for the ARMCM0P.svd template file follows.
-->

<!--
  Copyright (C) 2012 - 2018 Arm Limited. All rights reserved.

  Purpose: System Viewer Description (SVD) Example (Schema Version 1.1)
           This is a description of a none-existent and incomplete device
           for demonstration purposes only.

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:
   - Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.
   - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.
   - Neither the name of ARM nor the names of its contributors may be used
     to endorse or promote products derived from this software without
     specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  POSSIBILITY OF SUCH DAMAGE.
 -->

<device schemaVersion="1.3" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD.xsd" >
  <vendor>ARM Ltd.</vendor>                                       <!-- device vendor name -->
  <vendorID>ARM</vendorID>                                        <!-- device vendor short name -->
  <name>ARMCM0P</name>                                            <!-- name of part-->
  <series>ARM Cortex M0+</series>                                 <!-- device series the device belongs to -->
  <version>1.0</version>                                          <!-- version of this description, adding CMSIS-SVD 1.1 tags -->
  <description>ARM 32-bit Cortex-M0+ based device.</description>
  <licenseText>                                                   <!-- this license text will appear in header file. \n force line breaks -->
    ARM Limited (ARM) is supplying this software for use with Cortex-M\n
    processor based microcontroller, but can be equally used for other\n
    suitable  processor architectures. This file can be freely distributed.\n
    Modifications to this file shall be clearly marked.\n
    \n
    THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED\n
    OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF\n
    MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.\n
    ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR\n
    CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  </licenseText>

  <cpu>                                                           <!-- details about the cpu embedded in the device -->
    <name>CM0+</name>
    <revision>r0p0</revision>
    <endian>little</endian>
    <mpuPresent>false</mpuPresent>
    <fpuPresent>false</fpuPresent>
    <vtorPresent>false</vtorPresent>
    <nvicPrioBits>2</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>

  <addressUnitBits>8</addressUnitBits>                            <!-- byte addressable memory -->
  <width>32</width>                                               <!-- bus width is 32 bits -->
  <!-- default settings implicitly inherited by subsequent sections -->
  <size>32</size>                                                 <!-- this is the default size (number of bits) of all peripherals
                                                                       and register that do not define "size" themselves -->
  <access>read-write</access>                                     <!-- default access permission for all subsequent registers -->
  <resetValue>0x00000000</resetValue>                             <!-- by default all bits of the registers are initialized to 0 on reset -->
  <resetMask>0xFFFFFFFF</resetMask>                               <!-- by default all 32Bits of the registers are used -->

  <peripherals>
    <peripheral>
      <name>SCB</name>
      <description>System Control Block</description>
      <baseAddress>0xE000E000</baseAddress>
      <registers>
        <register>
          <name>CPUID</name>
          <description>Provides identification information for the processor</description>
          <addressOffset>0x00000D00</addressOffset>
          <access>read-only</access>
          <fields>
            <field>
              <name>implementer</name>
              <lsb>24</lsb>
              <msb>31</msb>
            </field>
            <field>
              <name>variant</name>
              <lsb>20</lsb>
              <msb>23</msb>
            </field>
            <field>
              <name>architecture</name>
              <lsb>16</lsb>
              <msb>19</msb>
            </field>
            <field>
              <name>partno</name>
              <lsb>4</lsb>
              <msb>15</msb>
            </field>
            <field>
              <name>revision</name>
              <lsb>0</lsb>
              <msb>3</msb>
            </field>
          </fields>
        </register>
        <register>
          <name>ICSR</name>
          <description>Interrupt Control State Register</description>
          <addressOffset>0x00000D04</addressOffset>
          <access>read-write</access>
          <fields>
            <field>
              <name>nmiPendSet</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>pendSvSet</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>pendSvClr</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>pendStSet</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>pendStClr</name>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>isrPreempt</name>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>isrPending</name>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>vectPending</name>
              <lsb>12</lsb>
              <msb>20</msb>
              <access>read-only</access>
            </field>
            <field>
              <name>vectActive</name>
              <lsb>9</lsb>
              <msb>11</msb>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VTOR</name>
          <description>Vector Table Offset Register</description>
          <addressOffset>0x00000D08</addressOffset>
          <access>read-write</access>
          <fields>
            <field>
              <name>tblOff</name>
              <lsb>7</lsb>
              <msb>31</msb>
            </field>
          </fields>
        </register>
        <register>
          <name>AIRCR</name>
          <description>Application Interrupt and Reset Control Register</description>
          <addressOffset>0x00000D0C</addressOffset>
          <access>read-write</access>
          <fields>
            <field>
              <name>vectKey</name>
              <lsb>31</lsb>
              <msb>16</msb>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VectorKey</name>
                  <description>Vector Key. The value 0x05FA must be written to this register, otherwise the register write is UNPREDICTABLE.</description>
                  <value>0x05fA</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>endianness</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>littleEndian</name>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>bigEndian</name>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>sysResetReq</name>
              <bitOffset>15</bitOffset>
              <bitWidth>2</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>vectClrActive</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR</name>
          <description>System Control Register</description>
          <addressOffset>0x00000D10</addressOffset>
          <access>read-write</access>
        </register>
        <register>
          <name>CCR</name>
          <description>Configuration and Control Register</description>
          <addressOffset>0x00000D14</addressOffset>
          <access>read-only</access>
        </register>
        <register>
          <name>SHPR2</name>
          <description>System Handler Priority Register 2</description>
          <addressOffset>0x00000D1C</addressOffset>
          <access>read-write</access>
        </register>
        <register>
          <name>SHPR3</name>
          <description>System Handler Priority Register 3</description>
          <addressOffset>0x00000D20</addressOffset>
          <access>read-write</access>
        </register>
        <register>
          <name>SHCSR</name>
          <description>System Handler Control and State Register</description>
          <addressOffset>0x00000D24</addressOffset>
          <access>read-write</access>
        </register>
        <register>
          <name>DFSR</name>
          <description>Default Fault Status Register</description>
          <addressOffset>0x00000D30</addressOffset>
          <access>read-write</access>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>
